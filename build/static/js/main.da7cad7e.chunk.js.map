{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","path","exact","component","AddUser","FindUser","NotFound","onChange","e","state","target","name","value","setState","onChangeFile","console","log","files","onSubmit","preventDefault","mobileNo","image","formData","FormData","append","axios","post","then","response","visiblity","data","error","catch","reset","bsCustomFileInput","init","Container","fluid","Alert","variant","Row","Col","xs","md","Form","noValidate","this","enctype","Group","controlId","Label","Control","type","placeholder","class","File","id","label","lang","custom","Button","to","Component","Card","style","width","ListGroup","Item","format","createdAt","Img","src","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.da7cad7e.chunk.js","sourcesContent":["import React, { Component, useState } from 'react';\nimport './App.css';\nimport { Container, Row, Col, Form, Button, Alert, Card, ListGroup } from 'react-bootstrap';\nimport axios from 'axios';\nimport bsCustomFileInput from 'bs-custom-file-input'\nimport { Route } from 'react-router';\nimport Moment from 'react-moment';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Link\n} from \"react-router-dom\";\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route path=\"/\" exact component={AddUser}></Route>\n          <Route path=\"/findUser\" component={FindUser}></Route>\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nclass AddUser extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      mobileNo: '',\n      image: '',\n      error: '',\n      visiblity: false\n    };\n  }\n\n  onChange = (e) => {\n    const state = this.state\n    state[e.target.name] = e.target.value;\n    this.setState(state);\n  }\n\n  // handle change event of input file\n  onChangeFile = e => {\n    console.log(e.target.files)\n    const state = this.state\n    state[e.target.name] = e.target.files[0];\n    this.setState(state);\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const { name, mobileNo, image } = this.state;\n\n    const formData = new FormData();\n    formData.append(\"image\", image, image.name);\n    formData.append('mobileNo', mobileNo);\n    formData.append('name', name);\n\n    axios.post('/api/addUser', formData)\n      .then((response) => {\n        console.log(response)\n        this.setState({ visiblity: false })\n        if (response.data.error) {\n          this.setState({ error: response.data.error, visiblity: true })\n        }\n      }).catch(console.error);\n    e.target.reset();\n  }\n\n\n  render() {\n    bsCustomFileInput.init()\n    return (\n      <Container fluid>\n        <Alert variant=\"success\">Add User</Alert>\n        <Row>\n          <Col xs={6} md={2}></Col>\n\n          <Col xs={6} md={4}>\n            <Form noValidate onSubmit={this.onSubmit} enctype=\"multipart/form-data\" name=\"myForm\">\n              <Form.Group controlId=\"formBasicName\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control type=\"text\" name=\"name\" placeholder=\"Enter Name\" onChange={this.onChange} />\n              </Form.Group>\n\n              <Form.Group controlId=\"formBasicMobile\">\n                <Form.Label>Mobile</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"Mobile Number\" name=\"mobileNo\" onChange={this.onChange} />\n              </Form.Group>\n              <Form.Group controlId=\"formBasicImage\" class=\"custom-file\">\n                <Form.Label >Image</Form.Label>\n                <Form.File\n                  id=\"custom-file-translate-scss\"\n                  label=\"Custom file input\"\n                  lang=\"en\"\n                  name=\"image\"\n                  class=\"custom-file-input\"\n                  custom\n                  onChange={this.onChangeFile}\n                />\n              </Form.Group>\n              {/*  <div class=\"custom-file\">\n                <input id=\"inputGroupFile01\" type=\"file\" class=\"custom-file-input\" name=\"image\" onChange={this.onChangeFile} />\n                <label class=\"custom-file-label\" for=\"inputGroupFile01\">Choose file</label>\n              </div> */}\n              <Button variant=\"primary\" type=\"submit\"> Submit</Button>\n            </Form>\n            {this.state.visiblity && (\n              <Alert variant=\"danger\">{this.state.error}</Alert>\n            )}\n          </Col>\n          <Col xs={6} md={2}>\n            <Link to=\"/findUser\">Find User</Link>\n          </Col>\n          <Col xs={6} md={4}></Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nclass FindUser extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      mobileNo: '',\n      visiblity: false,\n      data: null\n    };\n  }\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    console.log(\"formData \", this.state)\n    axios.post('/api/findUser', { \"mobileNo\": this.state.mobileNo })\n      .then((response) => {\n        console.log(response)\n        this.setState({ data: response.data.data, visiblity: true })\n      });\n  }\n\n  onChange = (e) => {\n    const state = this.state\n    state[e.target.name] = e.target.value;\n    console.log(\"state === \", state)\n    this.setState(state);\n  }\n\n  render() {\n    return (\n      <Container fluid>\n        <Alert variant=\"success\">Find User</Alert>\n        <Row>\n          <Col xs={6} md={2}></Col>\n          <Col xs={6} md={4}>\n            <Form onSubmit={this.onSubmit}>\n              <Form.Group controlId=\"formBasicName\">\n                <Form.Label>Mobile No</Form.Label>\n                <Form.Control type=\"text\" name=\"mobileNo\" placeholder=\"Enter Mobile Number\" onChange={this.onChange} />\n              </Form.Group>\n              <Button variant=\"primary\" type=\"submit\"> Find</Button>\n            </Form>\n          </Col>\n          <Col xs={6} md={2}>\n            <Link to=\"/\">Add User</Link>\n          </Col>\n\n          <Col xs={6} md={4}>\n            {this.state.visiblity && (\n              <Card style={{ width: '18rem' }}>\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item>Name: {this.state.data.name}</ListGroup.Item>\n                  <ListGroup.Item>Moble: {this.state.data.mobileNo}</ListGroup.Item>\n                  <ListGroup.Item>Created At:  <Moment format=\"DD/MM/YYYY\">{this.state.data.createdAt}</Moment> </ListGroup.Item>\n                </ListGroup>\n                <Card.Img variant=\"top\" src={this.state.data.image} />\n              </Card>\n            )}\n          </Col>\n        </Row>\n      </Container>\n\n    );\n  }\n}\n\n\nfunction NotFound() {\n  return (\n    <div>\n      <h1>Sorry, can’t find that.</h1>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\n// import $ from 'jquery';\n// import Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}